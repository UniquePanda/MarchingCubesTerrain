#pragma kernel GenerateNoise

#include "..\Utils\FastNoiseLite.hlsl"
#include "..\Utils\MetricsCompute.compute"

int _Seed;
float _Amplitude;
float _Frequency;
uint _Octaves;
float _GroundPercent;
uint _GroundLevel;

RWStructuredBuffer<float> _Weights;

[numthreads(numThreads, numThreads, numThreads)]
void GenerateNoise(uint3 id : SV_DispatchThreadID) {
    fnl_state noise = fnlCreateState(_Seed);
    noise.noise_type = FNL_NOISE_OPENSIMPLEX2;
    noise.fractal_type = FNL_FRACTAL_RIDGED;
    noise.frequency = _Frequency;
    noise.octaves = _Octaves;

    float3 pos = (float3)id / (_ChunkSize - 1) * _Scale;
    float ground = -pos.y + (_GroundPercent * _GroundLevel);
    float noiseValue = ground + fnlGetNoise3D(noise, pos.x, pos.y, pos.z) * _Amplitude;

    _Weights[indexFromCoord(id.x, id.y, id.z)] = noiseValue;
}
